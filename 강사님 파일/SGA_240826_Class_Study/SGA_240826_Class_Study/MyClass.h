#pragma once

class MyClass
{

private: // 공개 안 할 코드

    int x;
    int y;
    int z;

public:

    void Set_X(int x); // 매개변수를 받아서, 클래스 속의 x, y, z를 수정하기 위한
    void Set_Y(int y); // 그리고 오로지 그 목적 하나만을 위해 만드는 꼼수 함수
    void Set_Z(int z); // 예시는 CPP에서

    // 아래 세 함수 자료형에 주목
    int Get_X(); // 함수를 마치면 결과물이 있어야 한다는 점을 응용해서(혹은... '악용해서')
    int Get_Y(); // int의 결과물로 클래스 속 x, y, z를 반환하기 위한
    int Get_Z(); // 오직 그 목적 하나만을 위한 역시 꼼수 함수 (상세는 CPP에서)


    // 특수 함수 : 만들어질 때 자동으로 이 함수가 실행된다
    // 이 특수 함수의 조건 : 이름이 클래스 이름과 똑같을 것.

    // 이 특수한 함수를 생성자(constructor)라고 한다 : 인스턴스를 만드는 함수

    MyClass() // 반환형의 지정은 필요 없다. 왜? 실행하면 인스턴스가 나오니까
              // = 클래스 이름이 바로 자료형이다.
    {
        // 여기서 변수를 설정하면 반영된다
        x = 11;
        y = 22;
        z = 33;
    }
};

