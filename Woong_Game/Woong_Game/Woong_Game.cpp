#include <iostream>
// 윗쪽 # 표시의 뜻운 컴퓨터한테 최우선으로 실행하라는 지시를 뜻하는 암호기호
// #다음 include 뜻은 이어지는 <> 속의 기능을 준비하라는 뜻
// C++이 역사도 많고 제조사도 많아서 내장된 기능도 버전도 많으니 
// 어떤 기능을 가져와야 하는지 사람이 지시를 내려줘야 한다.
// <iostram >: c++에서 입력과 출력의 기능만 쏙 빼서 전담하는 기능임
// 위 코드를 한줄로 합치면 다음 의미가 된다 : 
// "여기에 글자를 치면 화면에 띄울 준비를 하세요 
// 슬래시 두번을 입력하면 주석처리 가능 
// 전체 주석처리 기능 까먹음

// 프로그래밍 언어는 결국 :인간의 언어를 컴퓨터가 수행할 수 있도록 바꿔 적은 암호문
// 본질은 그냥 주문서 같은것 : 이렇게 해라

// 프로그램의 핵심영역 . 이름은 main
// int : main 이라는 절차 이름은 main 틀리면 안됨(절대 잊지말고 틀리지도 말자 
//            수정도 하지말자
int main()// main 앞의 int : main  이라는 절차가 끝나면 . int 라는 유형의 결과를 
			// 컴퓨터가 보고받아야 한다는 뜻. 인트는 인티제의 줄임말 
		// 위코드의 뜻은 "지금부터 본론으로 들어갈 거고, 끝나면 숫자 하나가 
		// 나올겁니다."
	// C++이라는 프로그래밍 언어는 행동순서를 {} 라는 영역기호로 나타낸다.
	// 모든 프로그래밍 언어는 {} 가 들어가고 가로가 끝나야지 끝난다
	// 
{

	std::cout << "반갑지 않다 세상아" << std::endl;
	//std::endl의 뜻은 한줄 띄워지는 기능이다
	// 이를 줄바꿈 지시라고 한다 (개행지시)
	// Debug.Log("반갑지 않다 세상아");
	// 'std::' = '::' 표시까지 포함 
	// 뜻은 std 라는 내부기능을 하나 더 쓰겠다는 것
	// cout : c + out c++ 에서 출력을 한다는 뜻 즉 글자를 띄우라는 지시
	// '<<' :cout 에서 처리할 대상을 의미 (혹은 "띄워야 할 글자를 의미" )

	// 반갑구나 , 세상아!: 띄우고 싶은 문자 . 여기서 큰따음표는 여기있는 글자가
	// 컴퓨터를 향하는 지시문이 아니라고 (그냥 글자라고)
	// 확실하게 전달하기 위한 기호
	// 컴퓨터가 해당 글자가 지시인지 글자인지 판별시키기 위해 :" "를 항상 붙일것 
	

	// 여기서 다른 코드가 없으면, 아랫줄 } 기호에서 프로그램은 끝난다.

	printf_s("%s", "하하하하하 안녕");

	// 과제 : 이 파일 밑에 있는 cout 지시를 활용해서 
	// 아스키 아트 하나를 그려서 표현해주세요
	
}	